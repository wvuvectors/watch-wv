#################################
SEQR
#################################



This workflow accepts sequence read data as input (fastq.gz format) and provides COVID variant 
proportions as output.

How to run:

* First, make sure that you have configured all of the required conda environments! yml config files 
are provided in the resources subdir to assist with this process.

* If you are on the Thorny Flat HPC, use the subtf_seqsars.sh script to run this workflow.
The two REQUIRED arguments to this script are:
	1. A path to the input directory (-i). This directory must conain a folder of reads (fastq_pass).
	2. A path to the freyja barcodes file (-f). This file usually ends in .feather and can be found 
		 in the resources subdir. It contains the barcodes (SNP combinations) used to assign variant ids.

You *should* also provie an output directory (-o) and a run ID (-r). If you don't follow this
*strongly recommended* practice, the script will use default values but it be on your head.

The subtf_seqsars.sh script initializes the conda env variables and calls the sh/seqsars.sh script. 
If you aren't on Thorny Flat, you can simply init the conda env variables and run seqsars.sh directly.

* The seqsars.sh script is the primary controller for the SEQSARS workflow. It creates the output directory structure 
and calls out to the required packages (minimap2, freyja, etc.).

At the end of the seqsars workflow, the output directory will contain the following subdirs:
	0 RUN_FILES
	1 BASECALLING
	2 FQ_CONCAT
	3 QC1_RESULTS
	4 FQ_CHECKED
	5 QC2_RESULTS
	6 MAPPED
	7 DEMIX
	8 DASHBOARD
	9 SRA



#################################
SEQR
#################################

The seqr.sh script is the primary controller for the SEQR workflow. This accepts as input the demix files 
generated by the SEQSARS workflow, and creates the files required for WaTCH use.